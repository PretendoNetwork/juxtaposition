name: "juxt-dev"

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes: 
      - redis_data:/data
  mongo:
    image: mongo:8.0
    restart: unless-stopped
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"

    # This funky stuff is needed for making a replicaset
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongo_data:/data/db"
      - "mongo_config:/data/configdb"
  localstack:
    image: localstack/localstack:1.0.4
    ports:
      - "4567:4566"
    environment:
      - SERVICES=s3:4566
      - HOSTNAME=localstack
      - HOSTNAME_EXTERNAL=localstack
      - DEFAULT_REGION=us-east-1
  aws-cli:
    image: amazon/aws-cli
    depends_on:
      - localstack
    volumes:
      - ./testbucket:/aws
    environment:
      - AWS_ACCESS_KEY_ID=xyz
      - AWS_SECRET_ACCESS_KEY=xyz
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: /bin/sh -c
    command: |
      aws --endpoint-url=http://localstack:4566 s3api create-bucket --bucket miiverse

volumes:
  mongo_data:
  mongo_config:
  redis_data:
